 code book
 
 
 Titel 				getting & Cleaning data from 
		Human Activity Recognition Using Smartphones Data Set 
 Author       Sander54
 
 1  source:
  http://www.insideactivitytracking.com/data-science-activity-tracking-and-the-battle-for-the-worlds-top-sports-brand/
 
 
 2  Object data
		The data concerns:
		Human Activity Recognition database built from the recordings of 30 subjects performing activities of daily living (ADL)
		while carrying a waist-mounted smartphone with embedded inertial sensors.
  
 3 Target Script 1
		create 1 (Data.frame inwhich all releavnt information ts gathered concerning
		the means and standard deviations, of
		all activities and all subjects/persons
			and
		adjust labels names in descriptieve names.
   Target Script 2
		Create a tidy data.frame
		for information about mean
		
 4 Method of data measurement
	- with embedded accelerometer and gyroscopea in a smartphone (Samsung Galaxy S II)and ,
	- 30 volunteers within an age bracket of 19-48 years, 
	- performed six activities (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING)

	Of all the measurements the following data is available:
	- Means & Standard deviations
	- Frequentie and Time
	- 3-axial linear acceleration and 3-axial angular velocity at a constant rate of 50Hz
	- and some other variables which I do not understand..?? jerk?? (sorry).
	
	
 5 Data structure	
		data.frame':    10299 obs. of  83 variables
		
 6 Variables		
[1]	 $ activity                                 : chr  "STANDING" "STANDING" "STANDING" "STANDING" ...
[2]	 $ subject                                  : int  2 2 2 2 2 2 2 2 2 2 ...
[3]	 $ acti-nr                                  : int  5 5 5 5 5 5 5 5 5 5 ...
[4]	 $ time-body-acc-mean-x                     : num  0.257 0.286 0.275 0.27 0.275 ...
[5]	 $ time-body-acc-mean-y                     : num  -0.0233 -0.0132 -0.0261 -0.0326 -0.0278 ...
[6]	 $ time-body-acc-mean-z                     : num  -0.0147 -0.1191 -0.1182 -0.1175 -0.1295 ...
[7]	 $ time-body-acc-std-x                      : num  -0.938 -0.975 -0.994 -0.995 -0.994 ...
[8]	 $ time-body-acc-std-y                      : num  -0.92 -0.967 -0.97 -0.973 -0.967 ...
[9]	 $ time-body-acc-std-z                      : num  -0.668 -0.945 -0.963 -0.967 -0.978 ...
[10]	 $ time-gravityacc-mean-x                   : num  0.936 0.927 0.93 0.929 0.927 ...
[11]	 $ time-gravityacc-mean-y                   : num  -0.283 -0.289 -0.288 -0.293 -0.303 ...
[12]	 $ time-gravityacc-mean-z                   : num  0.115 0.153 0.146 0.143 0.138 ...
[13]	 $ time-gravityacc-std-x                    : num  -0.925 -0.989 -0.996 -0.993 -0.996 ...
[14]	 $ time-gravityacc-std-y                    : num  -0.937 -0.984 -0.988 -0.97 -0.971 ...
[15]	 $ time-gravityacc-std-z                    : num  -0.564 -0.965 -0.982 -0.992 -0.968 ...
[16]	 $ time-body-accjerk-mean-x                 : num  0.072 0.0702 0.0694 0.0749 0.0784 ...
[17]	 $ time-body-accjerk-mean-y                 : num  0.04575 -0.01788 -0.00491 0.03227 0.02228 ...
[18]	 $ time-body-accjerk-mean-z                 : num  -0.10604 -0.00172 -0.01367 0.01214 0.00275 ...
[19]	 $ time-body-accjerk-std-x                  : num  -0.907 -0.949 -0.991 -0.991 -0.992 ...
[20]	 $ time-body-accjerk-std-y                  : num  -0.938 -0.973 -0.971 -0.973 -0.979 ...
[21]	 $ time-body-accjerk-std-z                  : num  -0.936 -0.978 -0.973 -0.976 -0.987 ...
[22]	 $ time-body-gyro-mean-x                    : num  0.11998 -0.00155 -0.04821 -0.05664 -0.05999 ...
[23]	 $ time-body-gyro-mean-y                    : num  -0.0918 -0.1873 -0.1663 -0.126 -0.0847 ...
[24]	 $ time-body-gyro-mean-z                    : num  0.1896 0.1807 0.1542 0.1183 0.0787 ...
[25]	 $ time-body-gyro-std-x                     : num  -0.883 -0.926 -0.973 -0.968 -0.975 ...
[26]	 $ time-body-gyro-std-y                     : num  -0.816 -0.93 -0.979 -0.975 -0.978 ...
[27]	 $ time-body-gyro-std-z                     : num  -0.941 -0.968 -0.976 -0.963 -0.968 ...
[28]	 $ time-body-gyrojerk-mean-x                : num  -0.2049 -0.1387 -0.0978 -0.1022 -0.0918 ...
[29]	 $ time-body-gyrojerk-mean-y                : num  -0.1745 -0.0258 -0.0342 -0.0447 -0.029 ...
[30]	 $ time-body-gyrojerk-mean-z                : num  -0.0934 -0.0714 -0.06 -0.0534 -0.0612 ...
[31]	 $ time-body-gyrojerk-std-x                 : num  -0.901 -0.962 -0.984 -0.984 -0.988 ...
[32]	 $ time-body-gyrojerk-std-y                 : num  -0.911 -0.956 -0.988 -0.99 -0.992 ...
[33]	 $ time-body-gyrojerk-std-z                 : num  -0.939 -0.981 -0.976 -0.981 -0.982 ...
[34]	 $ time-body-accmag-mean                    : num  -0.867 -0.969 -0.976 -0.974 -0.976 ...
[35]	 $ time-body-accmag-std                     : num  -0.705 -0.954 -0.979 -0.977 -0.977 ...
[36]	 $ time-gravityaccmag-mean                  : num  -0.867 -0.969 -0.976 -0.974 -0.976 ...
[37]	 $ time-gravityaccmag-std                   : num  -0.705 -0.954 -0.979 -0.977 -0.977 ...
[38]	 $ time-body-accjerkmag-mean                : num  -0.93 -0.974 -0.982 -0.983 -0.987 ...
[39]	 $ time-body-accjerkmag-std                 : num  -0.896 -0.941 -0.971 -0.975 -0.989 ...
[40]	 $ time-body-gyromag-mean                   : num  -0.796 -0.898 -0.939 -0.947 -0.957 ...
[41]	 $ time-body-gyromag-std                    : num  -0.762 -0.911 -0.972 -0.97 -0.969 ...
[42]	 $ time-body-gyrojerkmag-mean               : num  -0.925 -0.973 -0.987 -0.989 -0.99 ...
[43]	 $ time-body-gyrojerkmag-std                : num  -0.894 -0.944 -0.984 -0.986 -0.99 ...
[44]	 $ frequentie-body-acc-mean-x               : num  -0.919 -0.961 -0.992 -0.993 -0.992 ...
[45]	 $ frequentie-body-acc-mean-y               : num  -0.918 -0.964 -0.965 -0.968 -0.969 ...
[46]	 $ frequentie-body-acc-mean-z               : num  -0.789 -0.957 -0.967 -0.967 -0.98 ...
[47]	 $ frequentie-body-acc-std-x                : num  -0.948 -0.984 -0.995 -0.996 -0.995 ...
[48]	 $ frequentie-body-acc-std-y                : num  -0.925 -0.97 -0.974 -0.977 -0.967 ...
[49]	 $ frequentie-body-acc-std-z                : num  -0.636 -0.942 -0.962 -0.969 -0.978 ...
[50]	 $ frequentie-body-acc-meanfreq-x           : num  0.0111 0.3521 0.1804 0.0627 -0.0189 ...
[51]	 $ frequentie-body-acc-meanfreq-y           : num  0.12125 0.17455 0.13346 0.26172 -0.00998 ...
[52]	 $ frequentie-body-acc-meanfreq-z           : num  -0.5229 -0.3207 0.1827 0.1518 0.0952 ...
[53]	 $ frequentie-body-accjerk-mean-x           : num  -0.9 -0.944 -0.991 -0.991 -0.991 ...
[54]	 $ frequentie-body-accjerk-mean-y           : num  -0.937 -0.969 -0.973 -0.972 -0.98 ...
[55]	 $ frequentie-body-accjerk-mean-z           : num  -0.924 -0.973 -0.972 -0.97 -0.983 ...
[56]	 $ frequentie-body-accjerk-std-x            : num  -0.924 -0.962 -0.992 -0.992 -0.994 ...
[57]	 $ frequentie-body-accjerk-std-y            : num  -0.943 -0.98 -0.971 -0.975 -0.979 ...
[58]	 $ frequentie-body-accjerk-std-z            : num  -0.948 -0.981 -0.972 -0.981 -0.989 ...
[59]	 $ frequentie-body-accjerk-meanfreq-x       : num  0.451 0.473 0.271 0.277 0.18 ...
[60]	 $ frequentie-body-accjerk-meanfreq-y       : num  0.1372 0.1672 -0.2722 -0.0383 -0.1392 ...
[61]	 $ frequentie-body-accjerk-meanfreq-z       : num  -0.1803 -0.2431 -0.0825 0.0218 0.1009 ...
[62]	 $ frequentie-body-gyro-mean-x              : num  -0.824 -0.923 -0.973 -0.972 -0.976 ...
[63]	 $ frequentie-body-gyro-mean-y              : num  -0.808 -0.926 -0.981 -0.981 -0.98 ...
[64]	 $ frequentie-body-gyro-mean-z              : num  -0.918 -0.968 -0.972 -0.967 -0.969 ...
[65]	 $ frequentie-body-gyro-std-x               : num  -0.903 -0.927 -0.973 -0.967 -0.974 ...
[66]	 $ frequentie-body-gyro-std-y               : num  -0.823 -0.932 -0.977 -0.972 -0.977 ...
[67]	 $ frequentie-body-gyro-std-z               : num  -0.956 -0.97 -0.979 -0.965 -0.97 ...
[68]	 $ frequentie-body-gyro-meanfreq-x          : num  0.184 0.0181 -0.4791 -0.497 -0.4275 ...
[69]	 $ frequentie-body-gyro-meanfreq-y          : num  -0.0593 -0.2273 -0.2101 -0.4999 -0.2781 ...
[70]	 $ frequentie-body-gyro-meanfreq-z          : num  0.4381 -0.1517 0.0493 -0.2589 -0.2913 ...
[71]	 $ frequentie-body-accmag-mean              : num  -0.791 -0.954 -0.976 -0.973 -0.978 ...
[72]	 $ frequentie-body-accmag-std               : num  -0.711 -0.96 -0.984 -0.982 -0.979 ...
[73]	 $ frequentie-body-accmag-meanfreq          : num  -0.4835 0.2035 0.3425 0.3312 0.0711 ...
[74]	 $ frequentie-body-body-accjerkmag-mean     : num  -0.895 -0.945 -0.971 -0.972 -0.987 ...
[75]	 $ frequentie-body-body-accjerkmag-std      : num  -0.896 -0.934 -0.97 -0.978 -0.99 ...
[76]	 $ frequentie-body-body-accjerkmag-meanfreq : num  -0.0354 -0.4912 0.1407 0.1486 0.4222 ...
[77]	 $ frequentie-body-body-gyromag-mean        : num  -0.771 -0.924 -0.975 -0.976 -0.977 ...
[78]	 $ frequentie-body-body-gyromag-std         : num  -0.797 -0.917 -0.974 -0.971 -0.97 ...
[79]	 $ frequentie-body-body-gyromag-meanfreq    : num  -0.0474 -0.0315 -0.1688 -0.2856 -0.3491 ...
[80]	 $ frequentie-body-body-gyrojerkmag-mean    : num  -0.89 -0.952 -0.986 -0.986 -0.99 ...
[81]	 $ frequentie-body-body-gyrojerkmag-std     : num  -0.907 -0.938 -0.983 -0.986 -0.991 ...
[82]	 $ frequentie-body-body-gyrojerkmag-meanfreq: num  0.0716 -0.4012 0.0629 0.1167 -0.1217 ...
[83]	 $ Testing-Training                         : chr  "Testing" "Testing" "Testing" "Testing" ...

 7 Transforming proces Raw data to data.frame with relevant information
		step 1 load all relevant files from the website 
		https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
		This concerns the following files:
			(data.frames)					  (columns)  (rows)
			subject_test.txt				dim	2947    1
			X_test.txt					dim	2947  561
			y_test.txt					dim	2947    1

			subject_train.txt				dim	7352    1
			X_train.txt					dim   	7352  561
			Y_train.txt					dim   	7352    1

			features.txt					dim	  561   2
			activity_labels.txt				dim	    6   2

		step 2 combine the columns NAMES (from an separte-file: features.txt) with the data-value-sheet X-train

		step 3 Combine all the relevant d.frames to 1 data.frame
		
		step 4 Select the columns with relevant information: (SD and Mean)
		
		step 5 Adding row label-names (via file "activity_labels.txt" )
		
		step 6 Rename the first 3 columns
		
		step 7 Create a variable indicating testing- or training subjects
		
		step 8 Adjust labels in descriptieve value names
 
		step 9 Create d.frame with only columns with the value "mean"
 
		step 10 Create a tidy-table 
		
		step 11 create a table with relevant goup-keys (own idea...)
		

8  data.frame and variable names
		The following data.frames have been created during the transformation of the final data-frame:
		
				SCRIPT 1	Getting & Cleaning		
		testtbl1	<---	Read data.file		 <---	subject_test.txt
		testtbl2	<---	Read data.file		 <---	X_test.txt
		testtbl3	<---	Read data.file		 <---	y_test.txt
					
		trainbl1	<---	Read data.file		 <---	subject_train.txt	
		trainbl2	<---	Read data.file		 <---	X_train.txt
		trainbl3	<---	Read data.file		 <---	Y_train.txt
					
		featureNames 	<---	Read data.file	   	 <---	features.txt
		x	 	<---	Read data.file		 <---	activity_labels.txt

		
		transLbl	-->		Matrix of lables.names of all Features				(step 2)
		combi_TT	-->		Combination of relevant data.frame (Test&Training)		(step 3)
		combiSDM3	-->		List columns numbers from [combi_TT] inwhich Mean or Std	(step 4)
		combiSDM3b  	-->		Data.frame with only colums concerning Mean and Std		(step 4)
		y_test2		-->		(= [testtbl3] = y_test.txt) + new column act.names		(step 5)
		y_train2 	--> 		(= [trainbl3] = y_train.txt) + new column act.names	    	(step 5)
		listActNames	--> 		Combined list of [y_test2] + [y_tran2]				(step 5)
		combiName1  	-->		[combiSDM3b] + new column act.names						          (step 5)
		combiRename 	-->		[combiName1] + new label names for columns 1+2+3		(step 6)
		vector2		-->		Vector: length=all obeservations, content "training"	  	(step 7)
		vector2a	-->		Vector: length=all test-obeserv., content "testing"		(step 7)
		combiV1$TT	--> 		[combiRename] + new column [TT] = [vector2(a)]			(step 7)
		lblNames	-->		names of data.frame [combiV1]							              (step 8)
		Rename1234	-->		names/labels [lblNames] adjusted (descriptive)			(step 8)
		lownames	-->		[Rename4] Upper letters changed in lower			(step 8)
		NewLabels 	-->		Vector of [lownames]									                  (step 8)
		combiV2		-->		[combiV1] adjusted with descriptive labels			(step 8)
		
				SCRIPT 2	create tidy data
		tidv1		-->		[combiV2] data.frame for adjusting to tidy-data.frame	  	(step 9)
		labellist	-->		list of names of [tidv1]								                (step 9)
		vectormean	-->		vector of all column nubers cointaing mean-values		(step 9)
		vect 		-->		adding other relevant column-numbers 				(step 9)
		tidv1b		-->		[tidv1] containing only relevant (mean) values			(step 9)
		NewLabels	-->		list of alle relevant label-names of [tidv1b](for MELT)		(step 10)
		tidv2		-->		[tidv1b] inwhich all columuns with values mean are melt 	(step 10)
							 in 1 clomun with labels and 1 column with the values
		tidtbl		-->		[tidv2] transformed in a table							            (step 11)
		tidtblgrp1 	--> 		group_by(tidv2, activity)  								              (step 11)
		tidtblgrp2 	-->	 	group_by(tidv2, subject)								                (step 11)
		tidtblgrp3 	-->		group_by(tidv2, variable)								                (step 11)
